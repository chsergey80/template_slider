Я остановлюсь только на ключевых моментах, на которые стоит обратить внимание именно с точки зрения организации:
1. Когда вы делаете любой виджет, не привязывайтесь жестко к среде или документу, корневые элементы лучше находить
 ВНЕ вашего кода инициализации и передавать уже готовыми. Допустим я могу захотеть виртуально создать слайдер, 
 без отрисовки и экспортировать слайды как изображения — это можно сделать, например чтобы сделать многостраничное
 pdf превью какого-то документа ну или еще по каким-то причинам.
2. Делите логику, помните про принцип единой ответственности, каждый логический блок вашего кода должен отвечать за что-то одно.
 Слайдер за слайды ) А не за свои контролы, просто дайте им апи.
3. Подходите к реализации последовательно, в данном примере правильная последовательность работы такая:
— сначала оформить один слайд .lead и сделать другие варианты оформления, если они нужны
— собрать слайды в ленту и поместить в контейнер, который показывает нам только один первый слайд, без JS, просто стили
— выберите способ движения ленты и попробуйте в devtools просто подвигать вашу ленту, чтобы убедиться что она движется
 корректно относительно контейнера
— напишите JS код, который обновляет состояние вашего слайдера так чтобы слайды двигались, просто для проверки
— реализуйте окончательный JS код, состояние вы можете получать напрямую из DOM, либо хранить локально,
 через ООП удобно представить состояние и АПИ вашего виджета

Большая часть анимаций в веб это управлением так называемым viewport — областью видимости. Сюда входит:
1. Перемещение внутреннего контента вьюпорта: слайдер, карта, галерея, паралакс, скролл-навигация, 3d тайлы
2. Изменение размера вьюпорта: аккордион, фото-превью
3. Скрытие и демонстрация вьюпорта: дропдаун панель, модальное окно, сайдбар, тулбар

Все это реализуется одними и теми же приемами на самом деле. Чтобы уметь делать вот это все, вам понадобится знать всего-лишь:
— как позиционировать элемент большего размера в контейнере меньшего размера
— как динамически подстраивать содержимое под размер контейнера
— когда скрывать, а когда пересоздавать содержимое

А теперь, опираясь на эти знания разберем несколько кейсов:
1. Слайдер — у нас есть слайдер A, внутри него есть несколько слайдов S. Нам нужно видеть только N слайдов за раз.
 Для этого мы делаем контейнер C, размером в (N * ширина S). Переключатся они будут по одному,
 значит смещение L на один слайд будет равно (± ширина S). Для позиционирования A внутри С нам нужно первому
 добавить position: relative и указать left равным смещению L. Еще мы можем используя свойства flex изменять
 позицию слайдов без смещения, если нам не нужно анимировать их движение в стороны.
2. Фото-превью — у нас на странице есть изображение A, по клику на которое нужно развернуть его на весь экран.
 Тут есть варианты создавать модальное окно, либо увеличивать имеющийся элемент с динамической подстройкой изображения
 через src-set или media source.
3. Скролл-навигация — мы прокручиваем страницу до горизонтального слайдера, который начинает прокручиваться вместе с нашим скроллом.
 Физически это устроено так, что вьюпорт слайдера увеличивается на высоту равную длинне всей ленты слайдов.
 По ходу прокрутки страницы, лента смещается одновременно по горизонтали и вертикали, визуально как будто оставаясь на месте,
 но на самом деле выполняя диагональное движение.

И так далее. Если разобрать все виджеты, вы увидите что реализация везде будет ограничена небольшим набором приемов,
 которые просто скомбинируются друг с другом. Так что внимательно оттачивайте азы и никакие даже самые сложные виджеты
 уже не будут для вас проблемой. Главное, будьте последовательны и двигайтесь маленькими шагами,
 чтобы решать проблемы сразу же как они появились. Не надо писать сразу все и потом пытаться понять почему
 не работает — даже опытные разработчики так не делают, хоть и могут. Но, решая задачу последовательно вы в том числе можете нащупать
 более удачное решение и не писать лишнего.